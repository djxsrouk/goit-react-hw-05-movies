{"version":3,"file":"static/js/270.141466a9.chunk.js","mappings":"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","sources":["Data/API.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPages/MoviesPage.module.css?ed64","pages/MoviesPages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '4f5bb813ac89f5b80d59faf20e0e0065';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const target = `${baseURL}trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(target);\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const target = `${baseURL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const response = await axios.get(target);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const target = `${baseURL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(target);\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const target = `${baseURL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(target);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const target = `${baseURL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(target);\n  return response.data.results;\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesByQuery,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"SearchBar_wrap__ibg5J\",\"search\":\"SearchBar_search__WR+HR\",\"searchTerm\":\"SearchBar_searchTerm__sHnGp\",\"searchButton\":\"SearchBar_searchButton__hgPYE\",\"iconSearch\":\"SearchBar_iconSearch__pc2W3\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.css';\nimport { IoSearchCircle } from 'react-icons/io5';\n\nconst Searchbar = props => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.query.value;\n    props.onSubmit(query);\n  };\n\n  return (\n    <div className={styles.formContainer}>\n      <div className={styles.wrap}>\n        <form className={styles.search} onSubmit={handleSubmit}>\n          <input\n            onSubmit={handleSubmit}\n            type=\"text\"\n            className={styles.searchTerm}\n            placeholder=\"Search movie...\"\n            name=\"query\"\n          ></input>\n          <button type=\"submit\" className={styles.searchButton}>\n            <IoSearchCircle className={styles.iconSearch} />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieSearchContainer\":\"MoviesPage_movieSearchContainer__TXMd2\",\"moviesGrid\":\"MoviesPage_moviesGrid__m6nf0\",\"movieCard\":\"MoviesPage_movieCard__2gAAT\",\"link\":\"MoviesPage_link__dj-2K\",\"movieImage\":\"MoviesPage_movieImage__xUYb2\",\"movieTitle\":\"MoviesPage_movieTitle__GjeG5\"};","import { useEffect, useState } from 'react';\nimport { fetchMoviesByQuery } from '../../Data/API';\nimport Searchbar from '../../components/SearchBar/SearchBar';\nimport { Link } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport styles from './MoviesPage.module.css';\nimport defaultImage from '../../images/default-image.jpg';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const actualQuery = searchParams.get('query');\n\n  const showFetchedMovies = async query => {\n    setIsLoading(true);\n    try {\n      const fetchedMovies = await fetchMoviesByQuery(query);\n      setMovies([...fetchedMovies]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setMovies([]);\n    if (actualQuery) {\n      showFetchedMovies(actualQuery);\n    }\n  }, [actualQuery]);\n\n  return (\n    <div className={styles.movieSearchContainer}>\n      <Searchbar onSubmit={e => setSearchParams({ query: e })}></Searchbar>\n      {isLoading && <div>Loading...</div>}\n      {movies.length > 0 ? (\n        <ul className={styles.moviesGrid}>\n          {movies.map(movie => {\n            return (\n              <li className={styles.movieCard} key={movie.id}>\n                <Link\n                  to={`/movies/${movie.id}`} // Ensure the path is correct\n                  state={{ from: '/movies' }} // Ensure the state is correct\n                  className={styles.link}\n                >\n                  <img\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                        : defaultImage\n                    }\n                    alt={movie.title}\n                    className={styles.movieImage}\n                  />\n                  <p className={styles.movieTitle}>{movie.title}</p>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        actualQuery && !isLoading && <div>Nothing found. Try again.</div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","baseURL","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","target","response","_context","prev","next","concat","axios","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByQuery","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","id","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","props","handleSubmit","event","preventDefault","value","onSubmit","_jsx","className","styles","children","_jsxs","type","placeholder","name","IoSearchCircle","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","isLoading","setIsLoading","actualQuery","get","showFetchedMovies","fetchedMovies","_toConsumableArray","t0","console","log","finish","useEffect","Searchbar","e","length","map","movie","Link","to","state","from","src","poster_path","defaultImage","alt","title"],"sourceRoot":""}